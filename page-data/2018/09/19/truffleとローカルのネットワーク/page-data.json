{"componentChunkName":"component---src-templates-post-js","path":"/2018/09/19/truffleとローカルのネットワーク/","result":{"data":{"wordpressPost":{"id":"9cfa742b-3e18-53a6-b3cf-4d668eaee059","title":"Truffleとローカルのネットワーク","excerpt":"<p>はじめに 一時、関連の書籍を色々読んでブロックチェーン熱が高まって、その後プロジェクトが忙しくなって熱が冷めて、最近また熱が高まってきました。そのうち調べたこと・やったことを網羅的にまとめようかと思いますが、今回は Tr [&hellip;]</p>\n","slug":"truffle%e3%81%a8%e3%83%ad%e3%83%bc%e3%82%ab%e3%83%ab%e3%81%ae%e3%83%8d%e3%83%83%e3%83%88%e3%83%af%e3%83%bc%e3%82%af","content":"<h1>はじめに</h1>\n<p>一時、関連の書籍を色々読んでブロックチェーン熱が高まって、その後プロジェクトが忙しくなって熱が冷めて、最近また熱が高まってきました。そのうち調べたこと・やったことを網羅的にまとめようかと思いますが、今回は Truffle についての小ネタで1つ記事を書こうと思います。</p>\n<p>ブロックチェーン、Ethereum、スマートコントラクトの基本的な話は今回は説明しません。</p>\n<h1>事前情報</h1>\n<h2>Truffle とは？</h2>\n<p>一応 Truffle の説明をしておきます。<a href=\"https://truffleframework.com/\">Truffle Suite</a> は、スマートコントラクト開発者のためのツールキット・フレームワークという感じです。</p>\n<p>Ethereum 上のスマートコントラクトを開発したい人は、まずは入れておくべきものです。</p>\n<h2>TestRPC は、現在は Ganache</h2>\n<p>ブロックチェーン・スマートコントラクト関連は動きが速く、1〜2年前の情報だと古くなっているものも多いので、まずは Ethereum や OpenZeppelin、そして今回の Truffle などの公式ドキュメントを見るのが良いと思います。</p>\n<p>スマートコントラクト関連で検索すると英語の記事が沢山出てきますが、1年くらい前の記事だと TestRPC という単語をたまに見かけるかもしれませんが、現在は Ganache という名前に変更になっていて、Truffle Suite の一部となっています。</p>\n<p><a href=\"https://truffleframework.com/blog/testrpc-is-now-ganache\">Truffle Suite | Blog | TestRPC is now Ganache</a></p>\n<p><!--more--></p>\n<h1>ローカルのネットワークにつなぐ</h1>\n<p>Truffle でスマートコントラクトの開発をする場合に、最初はローカルマシン上で動くテスト用のネットワークに繋ぐと思いますが、その方法が2つある事に後から気づきました。コマンドとしては以下の2つです。</p>\n<ul>\n<li>truffle console</li>\n<li>truffle develop</li>\n</ul>\n<p>どう違うのでしょうか。英語のドキュメントを見ると答が書いてありますが、それを簡単に説明すると共にいくつか補足します。</p>\n<p><a href=\"https://truffleframework.com/docs/truffle/getting-started/using-truffle-develop-and-the-console\">Truffle Suite | Documentation | Truffle | Using Truffle Develop and the Console</a></p>\n<h2>console: 既に立ち上がってるネットワークにつなぐ</h2>\n<p><code>truffle console</code> コマンドを実行すると、設定ファイル内に <code>development</code> という名前で定義されているネットワークに接続します。ネットワークが立ち上がっていない場合はエラーとなります。</p>\n<p>デフォルトでは <code>development</code> という設定名のネットワークに繋ぎますが、以下のようにオプションをつけることで、違う設定名のネットワークに繋ぐことも出来ます。</p>\n<pre><code>truffle console --network &lt;name&gt;\n</code></pre>\n<h2>develop: ネットワークを起動して、そこにつなぐ</h2>\n<p><code>truffle develop</code> コマンドを実行すると、その時点でテスト用のネットワークがポート8545で起動され、そこに接続します。注意すべき点としては、設定ファイルの内容は無視されます。</p>\n<h2>develop vs development で紛らわしい</h2>\n<p>上の説明で分かる通り、<code>truffle console</code> コマンドでは、（デフォルトで）<code>development</code> ネットワークに繋がり、コンソールのプロンプトは以下のようになります。</p>\n<pre><code>truffle(development)&gt;\n</code></pre>\n<p>それに対して、<code>truffle develop</code> コマンドでは、新規でネットワークを起動して、そこに繋がります。プロンプトは以下のようになります。</p>\n<pre><code>truffle(develop)&gt;\n</code></pre>\n<p>紛らわしい仕様ですね・・・</p>\n<h1>ネットワーク設定</h1>\n<h2>truffle.js vs. truffle-config.js</h2>\n<p><code>truffle init</code> コマンドでプロジェクトを作成すると、<code>truffle.js</code> と <code>truffle-config.js</code> という似たような名前のファイルがあることに気づくかもしれません。</p>\n<p><code>truffle.js</code> を使うのが基本ですが、Windows 環境の場合、そのファイル名だと truffle コマンドと競合するため、<code>truffle-config.js</code> というファイルを使います。</p>\n<ul>\n<li><a href=\"https://truffleframework.com/docs/truffle/reference/configuration\">Truffle Suite | Documentation | Truffle | Configuration</a></li>\n<li><a href=\"https://ethereum.stackexchange.com/questions/38117/truffle-configuration-file-name-is-it-truffle-js-or-truffle-config-js\">Truffle configuration file name &#8211; is it &#8216;truffle.js&#8217; or &#8216;truffle-config.js&#8217;? &#8211; Ethereum Stack Exchange</a></li>\n</ul>\n<h2>設定方法</h2>\n<p><code>truffle.js</code> （あるいは <code>truffle-config.js</code>）に、以下のような記述を追加します。</p>\n<pre><code>module.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 8545,\n      network_id: \"*\" // Match any network id\n    }\n  }\n};\n</code></pre>\n<p>詳しくは、ドキュメントを参照して下さい。</p>\n<p><a href=\"https://truffleframework.com/docs/truffle/reference/configuration\">Truffle Suite | Documentation | Truffle | Configuration</a></p>\n<h1>まとめ</h1>\n<p>Ethereum 上のスマートコントラクト開発には、Truffle を使うと良いです。その際、ローカル開発環境でテスト用のネットワークを立ち上げると思いますが、その方法には2つ有るので注意して下さい。</p>\n","dateObject":"2018-09-19T08:08:43.000Z","date":"September 19, 2018","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":[{"name":"blockchain","slug":"blockchain"},{"name":"Ethereum","slug":"ethereum"},{"name":"truffle","slug":"truffle"}],"author":{"name":"中の人（管理者）","slug":"engineering_8qmk0b"},"featured_media":{"media_details":{"sizes":{"large":{"source_url":"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2018/09/cryptocurrency-3424629_1280.jpg?fit=1024%2C682&ssl=1","height":682,"width":1024},"medium_large":{"source_url":"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2018/09/cryptocurrency-3424629_1280.jpg?fit=768%2C512&ssl=1","height":512,"width":768}}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2018/09/cryptocurrency-3424629_1280.jpg"},"wordpress_id":412}},"pageContext":{"id":"9cfa742b-3e18-53a6-b3cf-4d668eaee059","nextPath":"/2018/08/17/article-2-how-to-manage-aws-lambda-functions-with-serverless-framework/","nextTitle":"Article 2: How to manage AWS Lambda Functions with Serverless Framework","prevPath":"/2018/10/09/licensed-scrum-master-になりました/","prevTitle":"Licensed Scrum Master になりました"}}}