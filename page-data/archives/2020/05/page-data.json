{"componentChunkName":"component---src-templates-monthly-archive-js","path":"/archives/2020/05","result":{"data":{"site":{"siteMetadata":{"title":"もばらぶエンジニアブログ"}},"allWordpressPost":{"totalCount":4,"edges":[{"node":{"id":"c034aa67-9376-51a7-8b6e-5d204acccf7e","title":"BERTについて勉強したことまとめ (1) BERTとは? その特徴と解決しようとした問題、及び予備知識","excerpt":"<p>現在、社内の機械学習を用いたプロジェクトに関わっていて、その過程で学んだBERTについて今まで勉強したことをまとめてみようと思います。 自然言語処理(以下NLP)、とくにBERT周辺の理解したことを以下何回かに分けて書い [&hellip;]</p>\n","author":{"name":"miyamonz","slug":"miyamoto","avatar_urls":{"wordpress_48":"https://secure.gravatar.com/avatar/203b850b2dab54bf7f554e04762e57df?s=48&d=mm&r=g"}},"dateObject":"2020-05-22T11:26:00.000Z","date":"May 22, 2020","slug":"bert%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%93%e3%81%a8%e3%81%be%e3%81%a8%e3%82%81-1-bert%e3%81%a8%e3%81%af-%e3%81%9d%e3%81%ae%e7%89%b9%e5%be%b4%e3%81%a8","featured_media":null}},{"node":{"id":"9ddc65e3-7ebb-5459-8a6f-a5c2a85cd3e8","title":"24時間稼働でないKinesisストリームの運用で手こずった点","excerpt":"<p>前回に引き続き、Kinesisネタです。今回は、前回紹介したとあるコンシューマアプリケーションの運用で、タイトルにもある通り24時間稼働ではないユースケースでの運用で少しハマった点があるので書き記します。 ダウンタイムに [&hellip;]</p>\n","author":{"name":"issei_m","slug":"issei","avatar_urls":{"wordpress_48":"https://secure.gravatar.com/avatar/5507488fbe666087f0136a52985101d7?s=48&d=mm&r=g"}},"dateObject":"2020-05-21T02:00:00.000Z","date":"May 21, 2020","slug":"how-to-deal-with-non-24-7-kcl-consumer","featured_media":{"media_details":{"sizes":{"medium":{"source_url":"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/05/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f313630302f302a5551424b6a4566663175497358483857.png?fit=300%2C162&ssl=1","height":162,"width":300}}}}}},{"node":{"id":"d0441fba-7510-56f8-9152-acb0975e74fa","title":"Scala + Kinesis Client LibraryでKinesisコンシューマーアプリケーションを作る","excerpt":"<p>ここ最近のプロジェクトでKinesisのコンシューマーアプリケーションをScalaで開発・メンテしていたので、何回かに分けてノウハウをメモしておきます。 今回はScalaでKinesis Client Libraryを使 [&hellip;]</p>\n","author":{"name":"issei_m","slug":"issei","avatar_urls":{"wordpress_48":"https://secure.gravatar.com/avatar/5507488fbe666087f0136a52985101d7?s=48&d=mm&r=g"}},"dateObject":"2020-05-14T02:32:19.000Z","date":"May 14, 2020","slug":"create-kinesis-consumer-using-kcl-in-scala","featured_media":{"media_details":{"sizes":{"medium":{"source_url":"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/05/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f313630302f302a5551424b6a4566663175497358483857.png?fit=300%2C162&ssl=1","height":162,"width":300}}}}}},{"node":{"id":"7c68d7de-6afb-5c57-ac4f-d746a9c7822a","title":"Azure App Service + Docker で Rails アプリを動かす","excerpt":"<p>概要 会社でも個人でも AWS を使う事が多いのですが、今回、個人的なサイト作成で、勉強も兼ねて Azure App Service を使って Rails のアプリを作成してみました。 構成は以下の通りシンプルなものです [&hellip;]</p>\n","author":{"name":"中の人（管理者）","slug":"engineering_8qmk0b","avatar_urls":{"wordpress_48":"https://secure.gravatar.com/avatar/645c3a0bd2a9df7a7dcbb131b14267ac?s=48&d=mm&r=g"}},"dateObject":"2020-05-12T02:04:00.000Z","date":"May 12, 2020","slug":"rails-app-in-docker-on-azure-app-service","featured_media":{"media_details":{"sizes":{"medium":{"source_url":"https://i0.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/05/docker-azure-app-service.png?fit=300%2C200&ssl=1","height":200,"width":300}}}}}}]}},"pageContext":{"dateFrom":"2020-05-01T00:00:00.000Z","dateTo":"2020-06-01T00:00:00.000Z","month":"05","year":"2020"}}}