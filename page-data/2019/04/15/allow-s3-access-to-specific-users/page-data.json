{"componentChunkName":"component---src-templates-post-js","path":"/2019/04/15/allow-s3-access-to-specific-users/","result":{"data":{"wordpressPost":{"id":"7f13b50c-1502-5009-b782-e5872e16a892","title":"S3 の特定のフォルダのみにアクセス権限を与える","excerpt":"<p>背景: S3の権限設定は色々難しい Amazon S3 は、（お金さえ出せば）容量を気にせず色んなファイルを置いておける便利なストレージで、様々な用途に使われています。 特定のフォルダを特定のユーザー（※）のみに使わせた [&hellip;]</p>\n","slug":"allow-s3-access-to-specific-users","content":"\n<h2>背景: S3の権限設定は色々難しい</h2>\n\n\n\n<p>Amazon S3 は、（お金さえ出せば）容量を気にせず色んなファイルを置いておける便利なストレージで、様々な用途に使われています。</p>\n\n\n\n<p>特定のフォルダを特定のユーザー（※）のみに使わせたいというのも一般的な要望かと思いますが、Windows や Linux サーバーのユーザー権限設定とは考え方が大きく異なる部分も大きく、色々な概念を理解しないと思った通りの結果になりません。</p>\n\n\n\n<p>私自身、AWS の権限関連やポリシー関連はそこそこ業務で使っていたにも関わらず、いざやってみると上手く行かない事も結構あったため、ここでは S3 の権限設定に関する情報を色々まとめていきたいと思います。</p>\n\n\n\n<p>なお、本記事の想定読者としては、AWS に関する基本的な知識は持っていることを前提とします。</p>\n\n\n\n<p>※ここでの「ユーザー」は広い意味での言葉で、IAM のユーザーに限定されません</p>\n\n\n\n<h2>やりたいこと<br></h2>\n\n\n\n<ul><li>S3バケットが1つある (<code>example-bucket</code>)</li><li>ある IAM ユーザー <code>tom</code>に対して、以下のような権限を与える<ul><li>同バケットの特定のディレクトリ(<code>dir-a</code>)配下に、ファイルの読み書きが可能</li><li>同バケットの他の場所は、読み書き不可</li></ul></li><li>他の IAM ユーザーは、全てのファイルを読み書き可能</li><li>（全て、同一AWSアカウント内での話）</li></ul>\n\n\n\n<h2>こうやった</h2>\n\n\n\n<h3>バケットポリシーの設定</h3>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n{\n    &quot;Version&quot;: &quot;2012-10-17&quot;,\n    &quot;Id&quot;: &quot;foo&quot;,\n    &quot;Statement&quot;: [\n        {\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Principal&quot;: {\n                &quot;AWS&quot;: &quot;arn:aws:iam::111111111111:user/tom&quot;\n            },\n            &quot;Action&quot;: &quot;s3:ListBucket&quot;,\n            &quot;Resource&quot;: &quot;arn:aws:s3:::example-bucket&quot;\n        },\n        {\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Principal&quot;: {\n                &quot;AWS&quot;: &quot;arn:aws:iam::111111111111:user/tom&quot;\n            },\n            &quot;Action&quot;: [\n                &quot;s3:DeleteObject&quot;,\n                &quot;s3:GetObject&quot;,\n                &quot;s3:PutObject&quot;\n            ],\n            &quot;Resource&quot;: &quot;arn:aws:s3:::example-bucket/dir-a/*&quot;\n        }\n    ]\n}\n</pre>\n\n\n<h3>ユーザーに対しては何の権限も与えていない</h3>\n\n\n\n<p>今回、対象の IAM ユーザー（tom）に対しては、policy, role など何も付与していません。</p>\n\n\n\n<p>他のシステム（Windows, Linux, Oracle, etc.）でユーザー権限とかを管理している人からすると、直感的には</p>\n\n\n\n<ul><li>対象ユーザーに対して S3 への読み書きの権限を与える</li><li>その上でバケットの当該フォルダーのみアクセスを許可する（あるいは、当該フォルダー以外はアクセスを禁止する）</li></ul>\n\n\n\n<p>という感じにするかと思いますが、AWS の権限関連は色々複雑です。</p>\n\n\n\n<p>次の項で、分かりにくい部分・ハマりやすい点などを、分かる範囲に説明していきます。</p>\n\n\n\n<h2>分かりにくい点を雑多に説明</h2>\n\n\n\n<h3>事前に読むべき情報</h3>\n\n\n\n<p>具体的な説明の前に1点。以下の AWS の blog 記事をしっかり読んでおくと、トラブルは少ないと思います。（私の場合、流し読みしてて重要な点を読み飛ばしていたため、余計な時間を食ってしまいました。）</p>\n\n\n\n<ul><li><a href=\"https://aws.amazon.com/blogs/security/how-to-restrict-amazon-s3-bucket-access-to-a-specific-iam-role/\">How to Restrict Amazon S3 Bucket Access to a Specific IAM Role | AWS Security Blog</a></li><li><a href=\"https://aws.amazon.com/blogs/security/iam-policies-and-bucket-policies-and-acls-oh-my-controlling-access-to-s3-resources/\">IAM Policies and Bucket Policies and ACLs! Oh, My! (Controlling Access to S3 Resources) | AWS Security Blog</a></li></ul>\n\n\n\n<h3>IAM ポリシーと S3 バケットポリシー</h3>\n\n\n\n<p>今回の目的を達成するためには、（今回やったように）S3 のバケットポリシーを使っても良いですし、IAM ポリシーを使っても実現できます。複雑なユースケースでは、両方併用することがあるかもしれません。</p>\n\n\n\n<p>それらをどう使い分けるべきかは、上の2つ目のブログ記事に書いてあるので、興味のある方は参照してみて下さい。</p>\n\n\n\n<p>最初から用意されている <code>AmazonS3ReadOnlyAccess</code>というポリシーがありますが、中身を見てみると以下のような JSON の定義になっています。<br></p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n{\n    &quot;Version&quot;: &quot;2012-10-17&quot;,\n    &quot;Statement&quot;: [\n        {\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Action&quot;: [\n                &quot;s3:Get*&quot;,\n                &quot;s3:List*&quot;\n            ],\n            &quot;Resource&quot;: &quot;*&quot;\n        }\n    ]\n}\n</pre>\n\n\n<p>これは、全てのリソース（S3バケット）に対して読み込み系の権限を与えているので、今回、このポリシーを当該ユーザーに当ててしまうと、設定が面倒くさくなってしまいます。<br></p>\n\n\n\n<h3>ID とかが色々ある<br></h3>\n\n\n\n<p>AWS の権限周りを触っていると色んな用語が出てきて、慣れていないと混乱します。</p>\n\n\n\n<p>IAM のユーザー、ロール、グループ、ポリシーについては基本的なことなので別のエントリーで説明しようと思いますが、ID っぽいものにも何種類かあります。</p>\n\n\n\n<p>例えば、ユーザーに関して言うと以下のようなものがあります。</p>\n\n\n\n<ul><li>ユーザー名: <code>tom</code>とか</li><li>ユーザーID: <code>AIDA</code>から始まる英数字の羅列</li><li>ARN: <code>arn:aws:iam::アカウントID:user/ユーザー名</code>という形式のもの</li></ul>\n\n\n\n<p>ロールに関しても同様です。</p>\n\n\n\n<h3>Deny が常に Allow より優先される</h3>\n\n\n\n<p>上の方で紹介した 2つめの AWS blog の後半に詳しく説明されていますが、あるアクセスに対して適用可能なポリシーの中に Deny と Allow が両方あった場合、Deny が優先されます。</p>\n\n\n\n<h3>Condition の設定の仕方が分かりにくい</h3>\n\n\n\n<p>「XXユーザー以外のアクセスを許可したい」とかそういう場合に、ポリシーに <code>Condition</code>というものを記載する事が出来ます。が、JSON でどう書けばいいかが分かりにくいです。出来ることが沢山あるのが原因の一つだとは思いますが。</p>\n\n\n\n<p>以下のページに概要は書いてあり、また、そこからリンクされているページなども全部見れば良いのかもしれません。</p>\n\n\n\n<p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html#AccessPolicyLanguage_ConditionBlock\">IAM JSON Policy Elements: Condition &#8211; AWS Identity and Access Management</a></p>\n\n\n\n<p>それだとあんまりなので、個人的に参考になった情報を載せておきます。</p>\n\n\n\n<ul><li>オペレーターの一覧(<code>StringLike</code>とか)<ul><li><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html\">IAM JSON Policy Elements: Condition Operators &#8211; AWS Identity and Access Management</a></li></ul></li><li>Condition に使える &#8220;key&#8221;<ul><li><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-service-available\">AWS Global Condition Context Keys &#8211; AWS Identity and Access Management</a></li><li><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_actions-resources-contextkeys.html\">Actions, Resources, and Condition Keys for AWS Services &#8211; AWS Identity and Access Management</a></li></ul></li><li>使える変数（<code>aws:username</code> とか）<ul><li><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#policy-vars-infotouse\">IAM Policy Elements: Variables and Tags &#8211; AWS Identity and Access Management</a></li></ul></li></ul>\n\n\n\n<p>AWS はドキュメントは充実してるんですが、機能が豊富すぎるので、必要な情報を探すのも一苦労です。</p>\n\n\n\n<h3>同じ事をするのに色々方法がある</h3>\n\n\n\n<p>前述の IAM ポリシー vs. バケットポリシーもそうですし、バケットポリシーを使う場合でも、色々やり方があります。</p>\n\n\n\n<p><code>NotPrincipal</code>を使う方法とか、</p>\n\n\n\n<p><a href=\"https://stackoverflow.com/questions/36207399/s3-bucket-policy-to-allow-access-to-specific-users-and-restrict-all#\">amazon web services &#8211; S3 Bucket Policy to Allow access to specific users and restrict all &#8211; Stack Overflow</a></p>\n\n\n\n<p><code>Conditions</code>を使う方法とか、</p>\n\n\n\n<p><a href=\"https://aws.amazon.com/blogs/security/writing-iam-policies-grant-access-to-user-specific-folders-in-an-amazon-s3-bucket/\">Writing IAM Policies: Grant Access to User-Specific Folders in an Amazon S3 Bucket | AWS Security Blog</a></p>\n\n\n\n<p>色々あります。</p>\n\n\n\n<h2>まとめ</h2>\n\n\n\n<p>AWS の権限設定は、機能豊富で色々選択肢があります。公式ドキュメントで基本をある程度押さえつつ、AWS blog や、その他サイトなどでやりたいことと近い例を探して、それをベースに設定していく、というのが初心者には良いと思います。</p>\n\n\n\n<p>本記事では、S3 の権限設定に関する基本的な情報へのリンクを紹介すると共に、分かりにくい点をいくつか説明しました。<br></p>\n","dateObject":"2019-04-15T02:54:26.000Z","date":"April 15, 2019","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":[{"name":"AWS","slug":"aws"},{"name":"IAM","slug":"iam"},{"name":"S3","slug":"s3"}],"author":{"name":"中の人（管理者）","slug":"engineering_8qmk0b"},"featured_media":{"media_details":{"sizes":{"large":{"source_url":"https://i0.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/04/key-2114046_1280.jpg?fit=1024%2C576&ssl=1","height":576,"width":1024},"medium_large":{"source_url":"https://i0.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/04/key-2114046_1280.jpg?fit=768%2C432&ssl=1","height":432,"width":768}}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2019/04/key-2114046_1280.jpg"},"wordpress_id":752}},"pageContext":{"id":"7f13b50c-1502-5009-b782-e5872e16a892","nextPath":"/2019/03/29/a-bug-in-ansible-s3-sync-module-and-workaround/","nextTitle":"Bug in the Ansible&#8217;s s3_sync module `file_change_strategy` not working and workaround for it","prevPath":"/2019/04/15/try-rubymine-2019-1-new-feature/","prevTitle":"RubyMine 2019.1でRailsをdocker exec経由で起動可能になったがバグあって使い物にならない件"}}}