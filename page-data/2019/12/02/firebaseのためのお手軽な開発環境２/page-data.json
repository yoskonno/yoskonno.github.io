{"componentChunkName":"component---src-templates-post-js","path":"/2019/12/02/firebaseのためのお手軽な開発環境２/","result":{"data":{"wordpressPost":{"id":"8c52aa02-6b25-5819-8696-ffc1af470330","title":"Firebaseのためのお手軽な開発環境２","excerpt":"<p>以下の記事の続きです。今回はFirebaseの認証機能を実装をすることと実際にデプロイして動くことを試してみたいと思います。 Firebase認証の有効化 Firebase Console&nbsp;にログインし、[Au [&hellip;]</p>\n","slug":"firebase%e3%81%ae%e3%81%9f%e3%82%81%e3%81%ae%e3%81%8a%e6%89%8b%e8%bb%bd%e3%81%aa%e9%96%8b%e7%99%ba%e7%92%b0%e5%a2%83%ef%bc%92","content":"\n<p>以下の記事の続きです。今回はFirebaseの認証機能を実装をすることと実際にデプロイして動くことを試してみたいと思います。</p>\n\n\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-もばらぶエンジニアブログ\"><div class=\"wp-block-embed__wrapper\">\n<div class=\"oceanwp-oembed-wrap clr\"><blockquote class=\"wp-embedded-content\" data-secret=\"STMmJLa7BP\"><a href=\"https://stg-engineering-wp.mobalab.net/2019/11/25/firebase%e3%81%ae%e3%81%9f%e3%82%81%e3%81%ae%e3%81%8a%e6%89%8b%e8%bb%bd%e3%81%aa%e9%96%8b%e7%99%ba%e7%92%b0%e5%a2%83/\">Firebaseのためのお手軽な開発環境</a></blockquote><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Firebaseのためのお手軽な開発環境&#8221; &#8212; もばらぶエンジニアブログ\" src=\"https://stg-engineering-wp.mobalab.net/2019/11/25/firebase%e3%81%ae%e3%81%9f%e3%82%81%e3%81%ae%e3%81%8a%e6%89%8b%e8%bb%bd%e3%81%aa%e9%96%8b%e7%99%ba%e7%92%b0%e5%a2%83/embed/#?secret=STMmJLa7BP\" data-secret=\"STMmJLa7BP\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></div>\n</div></figure>\n\n\n\n<h2>Firebase認証の有効化</h2>\n\n\n\n<p><a rel=\"noreferrer noopener\" href=\"https://console.firebase.google.com/\" target=\"_blank\">Firebase Console</a>&nbsp;にログインし、[Authentication] → [ログイン方法]で、[匿名]を有効にします。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-28-at-12.41.46.png?resize=1024%2C751&#038;ssl=1\" alt=\"\" class=\"wp-image-1287\" srcset=\"https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-28-at-12.41.46.png?resize=1024%2C751&amp;ssl=1 1024w, https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-28-at-12.41.46.png?resize=300%2C220&amp;ssl=1 300w, https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-28-at-12.41.46.png?resize=768%2C563&amp;ssl=1 768w, https://i2.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-28-at-12.41.46.png?w=1870&amp;ssl=1 1870w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h2>Firebase認証の実装</h2>\n\n\n\n<p>簡単なログイン画面を作成します。以下の記事を参考にしました。</p>\n\n\n\n<p>参考：<a href=\"https://qiita.com/teshima/items/8ccf41cf7e297a6489e0\">https://qiita.com/teshima/items/8ccf41cf7e297a6489e0</a></p>\n\n\n\n<p>メインの画面のsrc/App.tsxは以下のように修正します。ログインできたらUIDを表示するだけのAppです。&amp;&amp;がエスケープされてしまうため、全角の＆＆に置き換えてありますので、コピペする場合はご注意を！</p>\n\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">\nimport * as React from 'react'\nimport './App.css'\nimport firebase, {auth, provider} from './plugins/firebase'\n\ninterface AppProps {\n}\ninterface AppState {\n  user: firebase.User | null\n}\n\nclass App extends React.Component&lt;AppProps, AppState&gt; {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      user: null\n    }\n  }\n\n  public state: AppState = {\n    user: null\n  };\n\n  public componentDidMount() {\n    auth.onAuthStateChanged(user =&gt; {\n      this.setState({ user: user })\n    })\n  }\n\n  public static login() {\n    auth.signInAnonymously()\n  }\n\n  public static logout() {\n    auth.signOut()\n  }\n\n  public render() {\n    return (\n        &lt;div className=&quot;App&quot;&gt;\n          &lt;p className=&quot;App-intro&quot;&gt;\n            UID: {this.state.user ＆＆ this.state.user.uid}\n          &lt;/p&gt;\n\n          {this.state.user ? (\n              &lt;button onClick={App.logout}&gt;Google Logout&lt;/button&gt;\n          ) : (\n              &lt;button onClick={App.login}&gt;Google Login&lt;/button&gt;\n          )}\n        &lt;/div&gt;\n    )\n  }\n}\n\nexport default App;\n</pre>\n\n\n<p>上記Appが利用する認証クラスsrc/plugins/firebase.tsを実装します。</p>\n\n\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: &quot;hogehoge-hogehoge&quot;,\n    authDomain: &quot;hogehoge.firebaseapp.com&quot;,\n    databaseURL: &quot;https://hogehoge.firebaseio.com&quot;,\n    projectId: &quot;hogehoge&quot;,\n    storageBucket: &quot;hogehoge.appspot.com&quot;,\n    messagingSenderId: &quot;0123456789&quot;,\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;\n</pre>\n\n\n<p>デフォルトで作成されたfirebase.jsonのままだとbuildディレクトリではなくpublicディレクトリがデプロイされてしまうため変更します。</p>\n\n\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\n{\n  &quot;hosting&quot;: {\n    &quot;public&quot;: &quot;public&quot;,\n    &quot;ignore&quot;: [\n      &quot;firebase.json&quot;,\n      &quot;**/.*&quot;,\n      &quot;**/node_modules/**&quot;\n    ]\n  }\n}\n\n↓↓↓↓\n\n{\n  &quot;hosting&quot;: {\n    &quot;public&quot;: &quot;build&quot;,    # buildに変更する\n    &quot;ignore&quot;: [\n      &quot;firebase.json&quot;,\n      &quot;**/.*&quot;,\n      &quot;**/node_modules/**&quot;\n    ]\n  }\n}\n</pre>\n\n\n<h2>Firebaseデプロイ</h2>\n\n\n\n<p>初回時はFirebaseへのログインと初期化が必要です。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ docker exec -it web /bin/bash\nroot@123:/myapp# firebase login\nroot@123:/myapp# firebase init\n</pre>\n\n\n<p>最後にビルドしてからデプロイします。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nroot@123:/myapp# yarn build\nroot@123:/myapp# firebase deploy\n</pre>\n\n\n<h2>まとめ</h2>\n\n\n\n<p>認証機能があっというまに出来上がるのは素晴らしいですね。次は本命のデータ操作に関する検証をしたいと思います。</p>\n","dateObject":"2019-12-02T00:00:51.000Z","date":"December 02, 2019","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":null,"author":{"name":"koji","slug":"koji"},"featured_media":{"media_details":{"sizes":{"large":{"source_url":"https://i1.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-23-at-12.36.17.png?fit=1024%2C482&ssl=1","height":482,"width":1024},"medium_large":{"source_url":"https://i1.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-23-at-12.36.17.png?fit=768%2C361&ssl=1","height":361,"width":768}}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2019/11/Screen-Shot-2019-11-23-at-12.36.17.png"},"wordpress_id":1278}},"pageContext":{"id":"8c52aa02-6b25-5819-8696-ffc1af470330","nextPath":"/2019/11/28/set-up-jupyterhub/","nextTitle":"JupyterHub のセットアップ","prevPath":"/2019/12/06/how-to-learn-technology/","prevTitle":"個人的な技術習得方法"}}}