{"componentChunkName":"component---src-templates-post-js","path":"/2019/03/29/a-bug-in-ansible-s3-sync-module-and-workaround/","result":{"data":{"wordpressPost":{"id":"7b4508cc-d4b4-5d31-ad91-7b8fe568cdb1","title":"Bug in the Ansible&#8217;s s3_sync module `file_change_strategy` not working and workaround for it","excerpt":"<p>I&#8217;ve described the actual workaround in the very bottom. If you are hasty just jump to: Workaround As of [&hellip;]</p>\n","slug":"a-bug-in-ansible-s3-sync-module-and-workaround","content":"\n<p>I&#8217;ve described the actual workaround in the very bottom. If you are <g class=\"gr_ gr_68 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins doubleReplace replaceWithoutSep\" id=\"68\" data-gr-id=\"68\">hasty</g> just jump <g class=\"gr_ gr_70 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-del replaceWithoutSep\" id=\"70\" data-gr-id=\"70\">to:</g> <a href=\"#workaround\">Workaround</a></p>\n\n\n\n<p>As of 2019-03-22 that I&#8217;m writing this entry now, I can still see this bug. Although I&#8217;ve opened an <a rel=\"noreferrer noopener\" href=\"https://github.com/ansible/ansible/issues/54076\" target=\"_blank\">Issue﻿</a> and a <a rel=\"noreferrer noopener\" href=\"https://github.com/ansible/ansible/pull/53935\" target=\"_blank\">Pull Request</a> for it Ansible team has responded nothing now. So it may not be fixed sooner&#8230;</p>\n\n\n\n<p>Besides, I have a reproducer for it, you can check it out here: <a rel=\"noreferrer noopener\" href=\"https://github.com/issei-m/ansible-s3-sync-bug-reproducer\" target=\"_blank\">https://github.com/issei-m/ansible-s3-sync-bug-reproducer﻿</a></p>\n\n\n\n<h2 id=\"Ansibleについて\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#Ansible%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"></a>What Ansible is</h2>\n\n\n\n<p>I believe a reader of this entry doesn&#8217;t need to know what it is but I try to explain briefly. It&#8217;s an infrastructure management tool where you can define the desired server state (e.g. &#8220;The <g class=\"gr_ gr_10 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"10\" data-gr-id=\"10\">user </g><code>foo</code><g class=\"gr_ gr_10 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"10\" data-gr-id=\"10\"> who</g> can be logged in with the private key A should exist&#8221;) in the <g class=\"gr_ gr_7 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"7\" data-gr-id=\"7\">Yaml</g> file.<br>Actually, recently I don&#8217;t use it much because of the latest more modern execution environments such as Container, Serverless but I do sometimes even now.</p>\n\n\n\n<p><a rel=\"noreferrer noopener\" href=\"https://www.ansible.com/\" target=\"_blank\">Official&nbsp;Site</a></p>\n\n\n\n<h2 id=\"s3_syncモジュールについて\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#s3_sync%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"></a>s3_sync module</h2>\n\n\n\n<p>Literally, an Ansible module where you can upload files to your S3 bucket.</p>\n\n\n\n<p><a rel=\"noreferrer noopener\" href=\"https://docs.ansible.com/ansible/latest/modules/s3_sync_module.html\" target=\"_blank\">Official&nbsp;Document</a></p>\n\n\n\n<p>It can not only upload files, but it can difference check for files between local and remote. So it&#8217;s effective because you can avoid futile upload for the same file.</p>\n\n\n\n<p>Following is for example definition:</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\ntasks:\n  - name: copy file to s3\n    s3_sync:\n      bucket: &quot;{{ bucket_name }}&quot;\n      file_root: &quot;./s3&quot;\n      key_prefix: &quot;&quot; # Default\n      mode: push\n      file_change_strategy: date_size # Default\n</pre>\n\n\n<p>In this definition, you can sync the all local files in <code>./s3</code>directory with a certain S3 bucket.<br>And as I explained above, <code>file_change_strategy</code> is an option where you can specify a strategy (logic) of how to determine whether the file has been changed.</p>\n\n\n\n<p><code>date_size</code> is a default strategy. The document claims: &#8220;it will upload if file sizes don&#8217;t match or if local file modified date is newer than s3&#8217;s version&#8221;. Surely it&#8217;s an advantage at performance perspective because no files will be upload if no changes exist.<br></p>\n\n\n\n<p>Unfortunately, however, As the title implies the bug I want to share with you today is living in exactly <g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"7\" data-gr-id=\"7\">this </g><code>date_size</code><g class=\"gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"7\" data-gr-id=\"7\"> strategy</g>.</p>\n\n\n\n<h2 id=\"バグの内容\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#%E3%83%90%E3%82%B0%E3%81%AE%E5%86%85%E5%AE%B9\"></a>Bug details</h2>\n\n\n\n<p>Let&#8217;s see what will happen along the <a rel=\"noreferrer noopener\" href=\"https://github.com/issei-m/ansible-s3-sync-bug-reproducer\" target=\"_blank\">reproducer</a> I&#8217;ve mentioned above.</p>\n\n\n\n<p>Clone this repository and execute the following command, then the local file <code>s3/target.txt</code> will be uploaded to specified S3 bucket as the <g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"3\" data-gr-id=\"3\">key </g><code>/target.txt</code><g class=\"gr_ gr_3 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"3\" data-gr-id=\"3\">.</g><br></p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ ansible-playbook playbook.yml --extra-vars 'bucket_name=your-bucket-name'\n</pre>\n\n\n<p>(!) Replace <code>your-bucket-name</code>with one your own in mind.</p>\n\n\n\n<p>As you can see the result, you can see the file has been uploaded successfully.</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nTASK [copy file to s3] *********************************************************************************************************************************************************************************\nchanged: [localhost]\n</pre>\n\n\n<p>The content of the file <g class=\"gr_ gr_90 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace\" id=\"90\" data-gr-id=\"90\">was</g> <g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"91\" data-gr-id=\"91\">actually </g><code>Test!!</code><g class=\"gr_ gr_91 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"91\" data-gr-id=\"91\">,</g> let&#8217;s see how the S3 side is like:</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ aws s3 cp s3://your-bucket-name/target.txt -                            \nTest!!\n</pre>\n\n\n<p>Looks good.</p>\n\n\n\n<p>Okay, let&#8217;s also see what will happen if we execute the same command again after changed the content of <g class=\"gr_ gr_105 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar only-ins doubleReplace replaceWithoutSep\" id=\"105\" data-gr-id=\"105\">file</g> <g class=\"gr_ gr_125 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"125\" data-gr-id=\"125\"><g class=\"gr_ gr_124 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling multiReplace\" id=\"124\" data-gr-id=\"124\">to</g> </g><code>Yeah!!</code><g class=\"gr_ gr_125 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"125\" data-gr-id=\"125\">.</g><br></p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ echo 'Yeah!!' &gt; s3/target.txt\n$ ansible-playbook playbook.yml --extra-vars 'bucket_name=your-bucket-name'\n\n...\n\nTASK [copy file to s3] *********************************************************************************************************************************************************************************\nok: [localhost]\n\n...\n</pre>\n\n\n<p>Reported nothing has changed against we expected. Actually, you can confirm that nothing is changed in S3 side:</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ aws s3 cp s3://your-bucket-name/target.txt -\nTest!!\n</pre>\n\n\n<p>However, actually, you&#8217;d be able to make a change with it if you updated the content to <code>Yeah!!!</code>which the 1 byte greater than original. (I omit the execution result, though)</p>\n\n\n\n<p>Apparently, the file isn&#8217;t uploaded if the file size matches between local and remote.<br></p>\n\n\n\n<p>The situation where we update the file as the same size does often exist in particularly some config file (e.g. tweaking some numeric), so it&#8217;s inconvenient. Besides, the document claims you can upload the file when the local file is newer than remote regardless of the same file size. There must be something wrong with it.<br></p>\n\n\n\n<h2 id=\"実装を見てみた\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#%E5%AE%9F%E8%A3%85%E3%82%92%E8%A6%8B%E3%81%A6%E3%81%BF%E3%81%9F\"></a>Looking at the implementation</h2>\n\n\n\n<p>As of now, the default branch <code>devel</code> which contains the problem looks like:<br></p>\n\n\n\n<p><a href=\"https://github.com/ansible/ansible/blob/50d56ca89de26317c41c4fb1a777fd7ccdc025a2/lib/ansible/modules/cloud/amazon/s3_sync.py#L439-L440\">https://github.com/ansible/ansible/blob/50d56ca89de26317c41c4fb1a777fd7ccdc025a2/lib/ansible/modules/cloud/amazon/s3_sync.py#L439-L440</a></p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nif local_modified_epoch &lt;= remote_modified_epoch or local_size == remote_size:\n    entry['skip_flag'] = True\n</pre>\n\n\n<p>It says: &#8220;If the last-modified-date of the S3 side is newer <strong>or</strong> both files have the same size, then upload will be skipped&#8221; <br>That&#8217;s definitely a bug.<br></p>\n\n\n\n<p>If the default value of <code>entry['skip_flag']</code> <g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\">is </g><code>False</code><g class=\"gr_ gr_4 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"4\" data-gr-id=\"4\">,</g> what you should do to implement it as the document says:</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nif local_modified_epoch &lt;= remote_modified_epoch and local_size == remote_size:\n    entry['skip_flag'] = True\n</pre>\n\n\n<p>Or</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nentry['skip_flag'] = not (local_size != remote_size or local_modified_epoch &gt; remote_modified_epoch)\n</pre>\n\n\n<p>I guess the cause of this bug is because the desired behavior is described using a <g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace\" id=\"5\" data-gr-id=\"5\">term </g><code>or</code> which is also used in document<g class=\"gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"5\" data-gr-id=\"5\">.</g> (but <code>and</code> is right)<br>(And in my opinion, it&#8217;s better to avoid using a negative name for a boolean value)</p>\n\n\n\n<h2 id=\"workaround\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95\"></a>Workaround</h2>\n\n\n\n<p>To be honest, that the above-mentioned issue is resolved is best but you can now use a workaround, that is <g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"6\" data-gr-id=\"6\">specifying </g><code>file_change_strategy: checksum</code><g class=\"gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace\" id=\"6\" data-gr-id=\"6\">.</g><br>In this strategy, the module can check file sameness between local and remote by comparing an md5 for the content. And fortunately as of now, it looks like no bugs in there, so it&#8217;d work perfectly.<br></p>\n\n\n\n<p>You&#8217;re interested in the performance side? That&#8217;s not a big deal.<br>Because the logic is using S3 object&#8217;s <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html\">ETag metadata which represents the md5 for the content</a>, so you don&#8217;t need to worry about remote file size.<br>In addition, the local is as well because not so many cases where you need to deal with the too huge file which can take much time to calculate the md5 exist.</p>\n\n\n\n<p>So you can use this strategy with no worry.</p>\n\n\n\n<h2 id=\"まとめ\"><a href=\"https://hackmd.io/sTRDxoErQnqwEsrT5au6gQ?view#%E3%81%BE%E3%81%A8%E3%82%81\"></a>Conclusion</h2>\n\n\n\n<ul><li>As of 2019-03-22, the strategy<code>file_change_strategy: date_size</code> is buggy where you cannot update the file which has the same size as the remote</li><li>You can use <code>checksum</code> strategy instead</li><li>You should avoid using a negative name for a boolean value (IMO)</li></ul>\n","dateObject":"2019-03-29T02:00:16.000Z","date":"March 29, 2019","categories":[{"name":"English","slug":"en"}],"tags":[{"name":"Ansible","slug":"ansible"},{"name":"Bug","slug":"bug"},{"name":"S3","slug":"s3"}],"author":{"name":"issei_m","slug":"issei"},"featured_media":{"media_details":{"sizes":{"large":null,"medium_large":null}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2019/03/ansible-wide.png"},"wordpress_id":729}},"pageContext":{"id":"7b4508cc-d4b4-5d31-ad91-7b8fe568cdb1","nextPath":"/2019/03/22/a-bug-in-ansible-s3-sync-module-and-workaround-2/","nextTitle":"Ansibleのs3_syncモジュールのfile_change_strategy: date_sizeのバグと対処法","prevPath":"/2019/04/15/allow-s3-access-to-specific-users/","prevTitle":"S3 の特定のフォルダのみにアクセス権限を与える"}}}