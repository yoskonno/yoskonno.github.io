{"componentChunkName":"component---src-templates-post-js","path":"/2020/09/16/bertについて勉強したことまとめ-3-自己教師学習と汎/","result":{"data":{"wordpressPost":{"id":"19d3cd0a-0ed8-5492-b5c6-abb026424062","title":"BERTについて勉強したことまとめ (3) 自己教師学習と汎用性について","excerpt":"<p>前回の続きです。今回はBERTにおける２つのトピック、自己教師学習と汎用性についてです。 自己教師学習 アノテーション 機械学習において、教師ありデータというものの多くは、人間が手動でラベル付をします。例えば犬の画像から [&hellip;]</p>\n","slug":"bert%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%93%e3%81%a8%e3%81%be%e3%81%a8%e3%82%81-3-%e8%87%aa%e5%b7%b1%e6%95%99%e5%b8%ab%e5%ad%a6%e7%bf%92%e3%81%a8%e6%b1%8e","content":"\n<p>前回の続きです。今回はBERTにおける２つのトピック、自己教師学習と汎用性についてです。</p>\n\n\n\n<h2>自己教師学習</h2>\n\n\n\n<h3>アノテーション</h3>\n\n\n\n<p>機械学習において、教師ありデータというものの多くは、人間が手動でラベル付をします。<br>例えば犬の画像から犬種を判定するモデルを作るために、事前に犬の画像に対して人間が正しい犬種をラベル付けします。<br>このような作業をアノテーションと呼びます。</p>\n\n\n\n<p>アノテーションは、わざわざ人間が手作業でラベル付をしなければならないので、高コストな作業になります。</p>\n\n\n\n<h3>文章データ自身からアノテーションデータを取り出す</h3>\n\n\n\n<p>機械学習全般で言えば、教師あり学習、教師なし学習という分類があるように、教師データが必要なものとそうでないものがあります。しかし、ディープラーニングの場合は、大抵の場合、教師データの準備が必要です。<br>あくまで個人的な観測範囲での印象ですが、普通にディープラーニングを勉強して知る範囲のモデルは、ほとんど教師データを用意するタイプのものであると感じました。</p>\n\n\n\n<p>しかし自然言語処理においては、これを低コストで用意する方法があります。大量の文章データを用意して、その文章自体から教師データを用意するという方法です。</p>\n\n\n\n<p>例えば、言語モデルのときに出てきた「1~ｍ単語が分かっているときの次のｍ＋１単語目を予測する」といったタスクは、大量の文章さえあれば、文章ごとにm単語目までを入力として利用すればいくらでも手に入ります。</p>\n\n\n\n<p>この事実自体は、BERT以前の各種の自然言語処理で既に使われているようです。<br><a href=\"https://www.amazon.co.jp/dp/4320124464\">自然言語処理のための深層学習</a> p129に、大量の文章から教師データを得られる、ということは述べられています。この教科書はBERT以前の範囲のサーベイ論文をわかりやすく書籍化されたものです。</p>\n\n\n\n<p>このような手法は、教師あり、なしという分類とは別に、self-supervised learning(直訳で自己教師学習）と呼ばれており、ディープラーニングにおいてよく研究されているようです。</p>\n\n\n\n<p>BERTにおいても２つの事前学習タスクは、どちらもこの仕組みのおかげで人間の手によるアノテーションが必要がありません。<br>実際、googleによる実装ではwikipediaの文章データと<a href=\"https://yknzhu.wixsite.com/mbweb\">book corpus</a>というデータが利用されました。</p>\n\n\n\n<p>自己教師学習は、BERTの高い性能を発揮するための一要素であると考えられます。</p>\n\n\n\n<h3>文章以外の分野でも</h3>\n\n\n\n<p>画像処理の分野においても、画像データを用意した上で、わざとその画像の画質を落とし、その画質を高画質に戻そうとするタスクを定義することで、同様にアノテーション抜きでの学習をする例があるようです。<br>他にも、画像や動画の一部を切り抜いて、その穴を埋めるというMasked LMの画像版とも言えるタスクもあるようですが、BERTほどの成功はまだ起きていないようです。</p>\n\n\n\n<p>参考：<a href=\"https://medium.com/lsc-psd/lecunn%E6%B0%8F-%E7%A7%81%E3%81%AF%E9%96%93%E9%81%95%E3%81%A3%E3%81%A6%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F-%E6%95%99%E5%B8%AB%E3%81%82%E3%82%8A%E5%AD%A6%E7%BF%92%E3%82%92%E4%BB%8A%E3%81%99%E3%81%90%E5%BB%83%E6%A3%84%E3%81%97%E3%81%A6%E6%95%99%E5%B8%AB%E3%81%AA%E3%81%97%E5%AD%A6%E7%BF%92%E3%82%92%E5%A7%8B%E3%82%81%E3%81%A6%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84-aaai20-edd194027bed\">AAAI2020でのLeCunn氏のスピーチ（の記事）</a></p>\n\n\n\n<h2>汎用性がもたらしたこと</h2>\n\n\n\n<p>BERTはファインチューニングをすることで複数のタスクを同時にSoTAを出し、事前学習部分は汎用的な学習ができていることがわかりました。</p>\n\n\n\n<p>誰かが事前学習を行い、その訓練済みのパラメータを公開すれば、他の人は残りのファインチューニングを追加でやるだけで、高い精度を得ることができます。</p>\n\n\n\n<p>また、下流タスクでのファインチューニングは、少ない教師データでも良い性能が得られることがわかりました。<br>（補足：いままで注釈が要らないと書いていたのは、事前学習のフェーズにおいてです。下流タスクでは、そのタスクに応じて教師データを用意する必要があります）</p>\n\n\n\n<p>誰かが事前学習を済ませて、そのパラメータを公開してしまえば、その言語において良い精度を出しやすい便利なモデルを他の人が利用できることになります。<br>これはプログラミングにおけるOSS、ライブラリやフレームワークの公開と通ずるものがあります。<br>実際、日本語においても多くの事前学習モデルが、研究室、企業、個人から公開されています。</p>\n\n\n\n<ul><li><a href=\"http://[日本語の事前学習モデルのまとめ](https://qiita.com/donuzium/items/27f5ba2d6660db14d860)\">日本語の事前学習モデルのまとめ</a></li></ul>\n\n\n\n<p>以下は、私が知っている範囲での上記のQiita記事に含まれない事前学習モデルです</p>\n\n\n\n<ul><li><a href=\"https://alaginrc.nict.go.jp/nict-bert/index.html\">NICT BERT 日本語 Pre-trained モデル</a></li><li><a href=\"https://github.com/BandaiNamcoResearchInc/DistilBERT-base-jp\">バンダイナムコ研究所のDistilBERTの日本語事前学習モデル</a></li></ul>\n\n\n\n<p>OSSと事情が異なる点も多いので、機械学習のモデルデータが公のものとして公開され、みんながそれをライブラリのように利用するという文化が広がるかどうかはわかりません。しかし、技術の進歩によって、モデル自体が軽量になったり、教師データの用意が簡単になれば、そのような文化が広がるのかもしれません。</p>\n\n\n\n<h2>まとめ</h2>\n\n\n\n<p>以上、複数回の投稿でBERTに関して書きました。</p>\n\n\n\n<p>また、当初はELECTRAにも触れようかと思いましたが、BERTに関してだけでブログが長くなりましたので、こちらについてはもう少し実際に実験してからブログに書こうかと思います。</p>\n","dateObject":"2020-09-16T00:00:00.000Z","date":"September 16, 2020","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":null,"author":{"name":"miyamonz","slug":"miyamoto"},"featured_media":null,"wordpress_id":1581}},"pageContext":{"id":"19d3cd0a-0ed8-5492-b5c6-abb026424062","nextPath":"/2020/09/15/manage-aks-secrets-with-azure-key-vault/","nextTitle":"AKS上のKubernetesの秘匿情報をAzure Key Vaultで管理する方法","prevPath":"/2020/09/17/kedro触ってみた/","prevTitle":"kedro触ってみた"}}}