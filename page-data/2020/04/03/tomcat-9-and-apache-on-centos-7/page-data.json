{"componentChunkName":"component---src-templates-post-js","path":"/2020/04/03/tomcat-9-and-apache-on-centos-7/","result":{"data":{"wordpressPost":{"id":"155d0078-e74d-507f-babf-9eede56866c3","title":"CentOS 7で Tomcat 9 + Apache を動かす","excerpt":"<p>2020年になって再び Tomcat を触る事になるとは思いませんでしたが、とあるプロジェクトで以下の構成のシステムを立ち上げることになりました。 CentOS 7 Tomcat 9 Apache 2.4 yum コマン [&hellip;]</p>\n","slug":"tomcat-9-and-apache-on-centos-7","content":"\n<p>2020年になって再び Tomcat を触る事になるとは思いませんでしたが、とあるプロジェクトで以下の構成のシステムを立ち上げることになりました。</p>\n\n\n\n<ul><li>CentOS 7</li><li>Tomcat 9</li><li>Apache 2.4</li></ul>\n\n\n\n<p><code>yum</code> コマンドでインストールできる Tomcat は7系なので、Tomcat 9 は公式サイトからダウンロードしてきてインストールしました。</p>\n\n\n\n<p>簡単だろうと思ってたのですが、意外なところでハマって2時間くらい費やしてしまったので、念のためメモしておきます。</p>\n\n\n\n<h2>手順概要</h2>\n\n\n\n<p>まずは、やったことを大まかにまとめておきます。</p>\n\n\n\n<ul><li>SELinux を無効化</li><li>各種ソフトのインストール<ul><li>Apache、Java を yum でインストール</li><li>Tomcat をダウンロードして適当な場所に配置</li></ul></li><li>Tomcat の設定<ul><li><code>tomcat</code> ユーザー・グループの作成</li><li>systemd への登録</li><li><code>server.xml</code> を修正</li></ul></li><li>Apache の設定</li><li>サービスの起動設定</li></ul>\n\n\n\n<h2>手順詳細</h2>\n\n\n\n<h3>SELinux の無効化</h3>\n\n\n\n<p>仕事でLinuxを使い始めて20年になりますが、いまだに SELinux を有効化している商用システムに関わったことがありません。</p>\n\n\n\n<p>何はともあれ、今回のプロジェクトでも SELinux を使う要件はありませんので、以下のファイルを修正してサクッと無効化します。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nsudo vi /etc/sysconfig/selinux\n</pre>\n\n\n<h3>各種ソフトのインストール</h3>\n\n\n\n<p>yum でインストールできるものは、以下の通りインストールします。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nsudo yum install httpd wget java-1.8.0-openjdk\n</pre>\n\n\n<p>Tomcat は、公式サイトから落としてきて、<code>/opt</code> 配下に配置します。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nwget https://downloads.apache.org/tomcat/tomcat-9/v9.0.33/bin/apache-tomcat-9.0.33.tar.gz\n\ntar zxvf apache-tomcat-9.0.33.tar.gz\nsudo mv apache-tomcat-9.0.33 /opt/\ncd /opt/\nsudo ln -s apache-tomcat-9.0.33/ tomcat9\n</pre>\n\n\n<h3>Tomcat の設定</h3>\n\n\n\n<p>RPM でインストールする時は気にする必要がありませんが、手動でインストールする場合には各種設定を自分でやる必要があります。</p>\n\n\n\n<p>まずは、ユーザーとグループを作成します。また、/opt 配下に配置したファイルの所有者も変更しておきます。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nsudo groupadd --system tomcat\nsudo useradd -M -d /opt/tomcat9 -g tomcat tomcat\nsudo chown -R tomcat: /opt/apache-tomcat-9.0.33/\n</pre>\n\n\n<p>次に、<code>/etc/systemd/system/tomcat9.service</code> というファイルを、以下の内容で作成します。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n[Unit]\nDescription=Tomcat 9 servlet container\nAfter=network.target\n\n[Service]\nType=forking\n\nUser=tomcat\nGroup=tomcat\n\nEnvironment=&quot;JAVA_HOME=/usr/lib/jvm/jre&quot;\nEnvironment=&quot;JAVA_OPTS=-Djava.security.egd=file:///dev/urandom&quot;\n\nEnvironment=&quot;CATALINA_BASE=/opt/tomcat9&quot;\nEnvironment=&quot;CATALINA_HOME=/opt/tomcat9&quot;\nEnvironment=&quot;CATALINA_PID=/opt/tomcat9/temp/tomcat.pid&quot;\nEnvironment=&quot;CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC&quot;\n\nExecStart=/opt/tomcat9/bin/startup.sh\nExecStop=/opt/tomcat9/bin/shutdown.sh\n\n[Install]\nWantedBy=multi-user.target\n</pre>\n\n\n<p>次に、<code>server.xml</code> で、AJPリスナーを有効化し、普通の HTTP リスナーは不要なので無効化します。変更前後の diff を以下に示します。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n--- /opt/tomcat9/conf/server.org.xml    2020-03-26 02:09:44.739733134 +0000\n+++ /opt/tomcat9/conf/server.xml        2020-03-26 02:49:31.395688240 +0000\n@@ -66,9 +66,11 @@\n          APR (HTTP/AJP) Connector: /docs/apr.html\n          Define a non-SSL/TLS HTTP/1.1 Connector on port 8080\n     --&gt;\n+    &lt;!--\n     &lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;\n                connectionTimeout=&quot;20000&quot;\n                redirectPort=&quot;8443&quot; /&gt;\n+    --&gt;\n     &lt;!-- A &quot;Connector&quot; using the shared thread pool--&gt;\n     &lt;!--\n     &lt;Connector executor=&quot;tomcatThreadPool&quot;\n@@ -113,12 +115,11 @@\n     --&gt;\n\n     &lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt;\n-    &lt;!--\n     &lt;Connector protocol=&quot;AJP/1.3&quot;\n+               secretRequired=&quot;false&quot;\n                address=&quot;::1&quot;\n                port=&quot;8009&quot;\n                redirectPort=&quot;8443&quot; /&gt;\n-    --&gt;\n\n     &lt;!-- An Engine represents the entry point (within Catalina) that processes\n          every request.  The Engine implementation for Tomcat stand alone\n</pre>\n\n\n<p>ポイントは <code>secretRequires=\"false\"</code> というところです。</p>\n\n\n\n<h3>Apache の設定</h3>\n\n\n\n<p>今回のプロジェクトでは OpenAM というソフトウェアを Tomcat で動かしたのですが、<code>/openam</code> にアクセスすると Tomcat の <code>/openam</code> を見に行くようにしたいので、<code>/etc/httpd/conf.d/openam.conf</code> というファイルを以下の内容で作成しました。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&lt;VirtualHost *:80&gt;\n    ServerName openam.example.com\n    ProxyPass /openam ajp://localhost:8009/openam\n&lt;/VirtualHost&gt;\n</pre>\n\n\n<h3>起動設定</h3>\n\n\n\n<p>最後に、Apache と Tomcat を自動的に起動するように設定し、reboot すれば完了です。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nsudo systemctl daemon-reload\nsudo systemctl enable tomcat9\nsudo systemctl enable httpd\nsudo shutdown -r now\n</pre>\n\n\n<h2>途中で出たエラーの内容</h2>\n\n\n\n<p>上の方で「ポイントは <code>secretRequires=\"false\"</code> というところです」と書きましたが、その記述が無いと、以下のようなエラーが出ました。</p>\n\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n26-Mar-2020 02:11:55.791 SEVERE [main] org.apache.catalina.util.LifecycleBase.handleSubClassException Failed to start component [Connector[AJP/1.3-8009]]\n        org.apache.catalina.LifecycleException: Protocol handler start failed\n                at org.apache.catalina.connector.Connector.startInternal(Connector.java:1038)\n                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\n                at org.apache.catalina.core.StandardService.startInternal(StandardService.java:438)\n                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\n                at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)\n                at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\n                at org.apache.catalina.startup.Catalina.start(Catalina.java:633)\n                at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n                at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n                at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n                at java.lang.reflect.Method.invoke(Method.java:498)\n                at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:343)\n                at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:474)\n        Caused by: java.lang.IllegalArgumentException: The AJP Connector is configured with secretRequired=&quot;true&quot; but the secret attribute is either null or &quot;&quot;. This combination is not valid.\n                at org.apache.coyote.ajp.AbstractAjpProtocol.start(AbstractAjpProtocol.java:264)\n                at org.apache.catalina.connector.Connector.startInternal(Connector.java:1035)\n                ... 12 more\n</pre>\n\n\n<p>エラーメッセージで検索したところ、以下のサイトが引っかかって、そこで解決策を知りました。</p>\n\n\n\n<p><a href=\"https://communities.bmc.com/docs/DOC-126517\">Upgrading Apache Tomcat to version 8.5.51 can s… | BMC Communities</a></p>\n\n\n\n<p>参照したログファイルは <code>/opt/tomcat9/logs/catalina.log</code> です。</p>\n\n\n\n<p><code>secretRequires</code> の説明などは、公式サイトの以下のページを参照して下さい。</p>\n\n\n\n<p><a href=\"https://tomcat.apache.org/tomcat-9.0-doc/config/ajp.html\">Apache Tomcat 9 Configuration Reference (9.0.33) &#8211; The AJP Connector</a></p>\n\n\n\n<h2>まとめ</h2>\n\n\n\n<p>Tomcat 9 + Apache 2.4 on CentOS 7 というのはあまり人気の無い組み合わせなのでしょう。今回のエラーの原因となった <code>secretRequires</code> に関して記載しているサイトは少なかったため、最初は動かなくて迷いました。</p>\n\n\n\n<p>もし同じような問題ではまっている人の参考になれば、と思い本記事を書きました。</p>\n\n\n\n<p>最後に完全な余談ですが、古参開発者にとって、Catalina といえば macOS ではなくて Tomcat です。</p>\n","dateObject":"2020-04-03T00:43:00.000Z","date":"April 03, 2020","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":[{"name":"Apache","slug":"apache"},{"name":"CentOS","slug":"centos"},{"name":"Tomcat","slug":"tomcat"}],"author":{"name":"中の人（管理者）","slug":"engineering_8qmk0b"},"featured_media":{"media_details":{"sizes":{"large":{"source_url":"https://i0.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/04/tomcat-on-centos.png?fit=1024%2C802&ssl=1","height":802,"width":1024},"medium_large":{"source_url":"https://i0.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/04/tomcat-on-centos.png?fit=768%2C602&ssl=1","height":602,"width":768}}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2020/04/tomcat-on-centos.png"},"wordpress_id":1398}},"pageContext":{"id":"155d0078-e74d-507f-babf-9eede56866c3","nextPath":"/2020/04/01/introduction-aws-cli-v2-official-docker-image/","nextTitle":"AWS CLI v2の公式Dockerイメージが出たみたいなので使ってみた","prevPath":"/2020/04/06/switching-profiles-for-aws-cli/","prevTitle":"AWS CLI のプロファイル切り替え関連"}}}