{"componentChunkName":"component---src-templates-post-js","path":"/2020/06/24/using-original-domain-with-netlify/","result":{"data":{"wordpressPost":{"id":"e7be13ce-0f9d-5793-bb36-c968b165f15e","title":"netlifyで独自ドメインを利用するときのリダイレクト設定","excerpt":"<p>netlifyは静的サイトを（基本）無料でホスティングでき、githubとの連携も優れていて簡単にデプロイできるために最近よく利用していますが、netlifyに静的サイトをデプロイすると、以下のようなnetlifyのサブ [&hellip;]</p>\n","slug":"using-original-domain-with-netlify","content":"\n<p>netlifyは静的サイトを（基本）無料でホスティングでき、githubとの連携も優れていて簡単にデプロイできるために最近よく利用していますが、netlifyに静的サイトをデプロイすると、以下のようなnetlifyのサブドメインのURLが割り当てられてアクセスすることができます。</p>\n\n\n\n<p><a href=\"https://foo-bar-123abc.netlify.app/\">https://foo-bar-123abc.netlify.app/</a><br><br>これに自分で取得した独自ドメインを設定することもnetlifyの管理画面から簡単にできますが、このようにして例えばmy-own-domain.jpなどの独自ドメインを設定すると以下の2つのURLから同じページにアクセスすることができていしまい、SEO上の懸念があるためにリダイレクト設定やcanonicalリンクの追加などの対応が必要になります。<br><br><a href=\"https://foo-bar-123abc.netlify.app/\">https://foo-bar-123abc.netlify.app/</a><br><br><a href=\"https://my-own-domain.jp/\">https://my-own-domain.jp/</a></p>\n\n\n\n<h3>実際は特に何もしなくても大丈夫だった</h3>\n\n\n\n<p>このような場合の適切な対処法を調べてみたのですが、結論から書くと同じコンテンツで異なるURLからアクセスできてしまうというSEO上の懸念に関しては「netlifyの方で適切に設定してくれるので特に何もする必要がない」ということがわかったのですが、調べたことを簡単にまとめます。</p>\n\n\n\n<h2><strong>netlifyのサブドメインへのアクセスはcanonicalリンクが自動的に追加される</strong></h2>\n\n\n\n<p>netlifyのリダイレクト設定を行うことのできる_redirectsファイルをstaticフォルダ以下に例えば以下のように設定することでnetlifyのサブドメイン（<a href=\"http://foo-bar-123abc.netlify.app/\">foo-bar-123abc.netlify.app</a>）にアクセスした場合に自動的に独自ドメイン（https://my-own-domain.jp）に301リダイレクトを行うことができ、以前はこのような設定が推奨されていたようでした。</p>\n\n\n\n<pre class=\"wp-block-code\"><code>https://foo-bar-123abc.netlify.app/* https://your-own-domain.jp/:splat 301!</code></pre>\n\n\n\n<p>参考リンク: <a href=\"https://www.yo1000.com/netlify-subdomain-redirects\">https://www.yo1000.com/netlify-subdomain-redirects</a><br><br>しかし、<a href=\"https://community.netlify.com/t/improved-seo-with-canonical-link-headers/11095\">2020年3月25日のnetlifyの記事による発表</a>によると、netlify側でこのような設定をする必要のないように新たな変更が加えられたようで、現在では自動的にcanonicalリンクが付与されることで、SEO上の懸念はなくなったようなので、こちら側では特に何かを設定する必要はなくなりました。<br><br>試しにcurlの—headオプションで実際にcanonicalリンクが設定されているか確認してみますと、netlifyのサブドメインにアクセスした場合はきちんとcanonicalリンクが設定されていることがわかりました。（urlはダミーのものです）</p>\n\n\n\n<pre class=\"wp-block-code\"><code>curl https://foo-bar-123abc.netlify.app —head\n\nHTTP/2 200\ncache-control: public, max-age=0, must-revalidate\ncontent-length: 0\ncontent-type: text/html; charset=UTF-8\ndate: Wed, 24 Jun 2020 03:58:33 GMT\netag: \"a6c6629461738611341a643e6bcbf9d8-ssl\"\nlink: &lt;https://my-own-domain.jp/>; rel=\"canonical\"    // canonicalリンクが付与されている！\nstrict-transport-security: max-age=31536000\nage: 0\nserver: Netlify</code></pre>\n\n\n\n<p>ただ、このようなcanonicalでの対応ですと、SEO上の問題はないものの以前のURLにアクセス自体は可能になっていることにはご注意ください。もしnetlifyサブドメインにユーザーがアクセスできないようにする必要があるのでしたら_redirectsファイルを作成しての設定が必要になりそうですが、基本的にはユーザーがnetlifyのサブドメインを知ることのできる方法はないと思うので、引き続きアクセスできるようにしておいて問題なさそうです。</p>\n\n\n\n<h2>まとめ</h2>\n\n\n\n<p>netlifyは静的サイトを無料でホスティングできる便利なサービスですが、今回の記事に関することなど使い勝手が更によくなっているようですので、今後も積極的に使っていきたいと思います！</p>\n\n\n\n<p></p>\n\n\n\n<p><br></p>\n","dateObject":"2020-06-24T08:00:00.000Z","date":"June 24, 2020","categories":[{"name":"Uncategorized","slug":"uncategorized"}],"tags":null,"author":{"name":"Konno","slug":"konno"},"featured_media":{"media_details":{"sizes":{"large":null,"medium_large":{"source_url":"https://i1.wp.com/stg-engineering-wp.mobalab.net/wp-content/uploads/2020/06/netlify.png?fit=768%2C512&ssl=1","height":512,"width":768}}},"source_url":"https://stg-engineering-wp.mobalab.net/wp-content/uploads/2020/06/netlify.png"},"wordpress_id":1547}},"pageContext":{"id":"e7be13ce-0f9d-5793-bb36-c968b165f15e","nextPath":"/2020/06/22/paypal-vs-stripe/","nextTitle":"PayPal vs. Stripe","prevPath":"/2020/07/21/execute-typescript-with-ts-node/","prevTitle":"TypeScriptを手軽に実行できるPlayground環境の作り方"}}}