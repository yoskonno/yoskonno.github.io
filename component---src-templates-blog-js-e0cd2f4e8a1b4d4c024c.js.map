{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog.js","webpack:///./src/components/PostList.js"],"names":["Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","numbersBelow","filter","number","numbersAbove","showFirstButton","showLastButton","showLeftDots","showRightDots","className","role","data-test","to","rel","map","path","key","IndexPage","render","this","props","data","posts","allWordpressPost","edges","Layout","PostList","React","Component","pageQuery","title","undefined","post","node","date","Date","dateObject","pathFromDate","getPathFromDate","decodeURIComponent","slug","thumbnailSrc","ratio","featured_media","media_details","sizes","medium","source_url","height","width","error","backgroundImageStyle","backgroundImage","backgroundSize","id","style","author","name","dangerouslySetInnerHTML","__html","excerpt","replace"],"mappings":"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","file":"component---src-templates-blog-js-e0cd2f4e8a1b4d4c024c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n  const {\n    previousPagePath,\n    nextPagePath,\n    humanPageNumber,\n    numberOfPages,\n  } = pageContext\n\n  const numbersBelow = [\n    humanPageNumber - 3,\n    humanPageNumber - 2,\n    humanPageNumber - 1,\n  ].filter((number) => number > 0)\n\n  const numbersAbove = [\n    humanPageNumber + 1,\n    humanPageNumber + 2,\n    humanPageNumber + 3,\n  ].filter((number) => number <= numberOfPages)\n\n  const showFirstButton = humanPageNumber !== 1\n  const showLastButton = humanPageNumber !== numberOfPages\n  const showLeftDots = humanPageNumber >= 5\n  const showRightDots = humanPageNumber <= numberOfPages - 4\n\n  return (\n    <div className=\"pagination\" role=\"navigation\">\n      {showFirstButton && (\n        <div\n          className=\"pagination__item\"\n          data-test=\"first-button\"\n        >\n          <Link to='/'>\n            {'<<'}\n          </Link>\n        </div>\n      )}\n      {previousPagePath && (\n        <div\n          className=\"pagination__item\"\n        >\n          <Link to={previousPagePath} rel=\"prev\">\n            Previous\n          </Link>\n        </div>\n      )}\n      {showLeftDots && (\n        <div\n          className=\"pagination__item pagination__dots\"\n          data-test=\"left-dots\"\n        >\n          <div className=\"pagination__non-link-content\">\n            ...\n          </div>\n        </div>\n      )}\n      {numbersBelow.map((number) => {\n        const path = number === 1 ? `/` : `/page/${number}`\n        return (\n          <div\n            key={path}\n            className=\"pagination__item\"\n          >\n            <Link to={path} data-test='number-below'>\n              {number}\n            </Link>\n          </div>\n        )\n      })}\n      <div\n        className=\"pagination__item\"\n      >\n        <div className=\"pagination__non-link-content\">\n          {humanPageNumber}\n        </div>\n      </div>\n      {numbersAbove.map((number) => {\n        const path = `/page/${number}`\n        return (\n          <div\n            key={path}\n            className=\"pagination__item\"\n          >\n            <Link to={path} data-test='number-above'>\n              {number}\n            </Link>\n          </div>\n        )\n      })}\n      {showRightDots && (\n        <div\n          className=\"pagination__item pagination__dots\"\n          data-test=\"right-dots\"\n        >\n          <div className=\"pagination__non-link-content\">\n            ...\n          </div>\n        </div>\n      )}\n      {nextPagePath && (\n        <div\n          className=\"pagination__item\"\n        >\n          <Link to={nextPagePath} rel=\"next\">\n            Next\n          </Link>\n        </div>\n      )}\n      {showLastButton && (\n        <div\n          className=\"pagination__item\"\n          data-test=\"last-button\"\n        >\n          <Link to={`page/${numberOfPages}`}>\n            {'>>'}\n          </Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\nimport Pagination from '../components/Pagination'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data, pageContext, path } = this.props\n    const { edges: posts } = data.allWordpressPost\n\n    return (\n      <Layout>\n        <PostList posts={posts} path={path} />\n        <Pagination pageContext={pageContext} />\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allWordpressPost: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    numPages: PropTypes.number,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery($limit: Int!, $skip: Int!) {\n    allWordpressPost(\n      sort: { fields: date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...PostListFields\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport { getPathFromDate } from '../lib/helper/TimeHelper'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { posts, path, title } = this.props\n\n    return (\n      <section className=\"section\">\n        { path !== '/' && title !== undefined && (\n          <p className=\"post-list__section-title\">{ title }</p>\n        )}\n        <div className=\"post-list\">\n          {posts.map(({ node: post }) => {\n            const date = new Date(post.dateObject)\n            const pathFromDate = `/${getPathFromDate(date)}/${decodeURIComponent(post.slug)}/`\n\n            let thumbnailSrc = \"/img/mobalab-logo.jpg\"\n            let ratio = 0\n\n            try {\n              thumbnailSrc = post.featured_media.media_details.sizes.medium.source_url\n\n              const { height, width } = post.featured_media.media_details.sizes.medium\n              ratio = width / height\n            } catch(error) {\n              // console.log(error)\n            }\n            const backgroundImageStyle = {\n              backgroundImage: `url(${thumbnailSrc})`,\n              backgroundSize: ratio > 2 ? 'contain' : 'cover'\n            }\n\n            return (\n              <div className=\"post-list__item-wrapper\">\n                <Link\n                  className=\"post-list__item\"\n                  key={post.id}\n                  to={pathFromDate}\n                >\n                  <div className=\"post-list__thumbnail\" style={backgroundImageStyle} />\n                  <div className=\"post-list__main-area\">\n                    <h4 className=\"post-list__title\">\n                      {post.title}\n                    </h4>\n                    <p className=\"post-list__small\">\n                      {post.date}\n                    </p>\n                    <p className=\"post-list__small\">\n                      posted by\n                      {' '}\n                      <Link to={`/author/${post.author.slug}`}>\n                        {post.author.name}\n                      </Link>\n                    </p>\n                    <div\n                      className=\"post-list__excerpt\"\n                      dangerouslySetInnerHTML={{\n                        __html: post.excerpt.replace(/<p class=\"link-more.*/, '').replace('[&hellip;]', '...'),\n                      }}\n                    />\n                    <div className=\"post-list__button-area\">\n                      <Link\n                        className=\"button button--small\"\n                        to={pathFromDate}\n                      >\n                        続きを読む →\n                      </Link>\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            )}\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport const pageQuery = graphql`\n  fragment PostListFields on wordpress__POST {\n    id\n    title\n    excerpt\n    author {\n      name\n      slug\n      avatar_urls {\n        wordpress_48\n      }\n    }\n    dateObject: date\n    date(formatString: \"MMMM DD, YYYY\")\n    slug\n    featured_media {\n      media_details {\n        sizes {\n          medium {\n            source_url\n            height\n            width\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}